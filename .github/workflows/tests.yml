name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: "config.django.local"
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_DEBUG: True
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_NAME }}
        options: >-
          --health-cmd pg_isready

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10.17
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.17
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL..."
          sleep 10
      - name: Test with Django
        run: |
          export DJANGO_SETTINGS_MODULE="${{ env.DJANGO_SETTINGS_MODULE }}"
          export POSTGRES_NAME="${{ secrets.POSTGRES_NAME }}"
          export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
          export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          export POSTGRES_HOST="$POSTGRES_HOST"
          export POSTGRES_PORT="$POSTGRES_PORT"
          python manage.py test
